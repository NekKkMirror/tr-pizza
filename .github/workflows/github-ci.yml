name: CI WorkFlows Actions

run-name: CI/CD ðŸš€

env:
  ENV_FILE: ${{
    github.event.pull_request.base.ref == 'master' ||
    github.ref == 'refs/heads/master' &&
    '.env.production' ||
    '.env.local'
    }}

on:
  push:
    branches:
      - master
      - development

  pull_request:
    branches:
      - master
      - development

  workflow_dispatch:

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  lint-production:
    runs-on: ubuntu-latest

    if: github.event.pull_request.base.ref == 'master' && github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js with yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Create env file
        run: touch .env

      - name: Copy env file
        run: cp $ENV_FILE .env

      - name: Build container
        shell: sh
        run: make build-container

      - name: Run lint in container
        shell: sh
        run: make docker-run-install-lint

      - name: Kill container
        shell: sh
        run: make compose-down-v

  lint-development:
    runs-on: ubuntu-latest

    if: github.event.pull_request.base.ref == 'development' && github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js with yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Create env file
        run: touch .env

      - name: Copy env file
        run: cp $ENV_FILE .env

      - name: Build container
        shell: sh
        run: make build-container

      - name: Run lint in container
        shell: sh
        run: make docker-run-install-lint

      - name: Kill container
        shell: sh
        run: make compose-down-v

  deploy-development:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/development' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js with yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Create env file
        run: touch .env

      - name: Copy env file
        run: cp $ENV_FILE .env

      - name: Build container
        shell: sh
        run: make build-container

      - name: Kill container
        shell: sh
        run: make compose-down-v

  deploy-production:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js with yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Create env file
        run: touch .env

      - name: Copy env file
        run: cp $ENV_FILE .env

      - name: Build container
        shell: sh
        run: make build-container

      - name: Build production
        shell: sh
        run: make docker-run-install-build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment

      - name: Kill container
        shell: sh
        run: make compose-down-v
