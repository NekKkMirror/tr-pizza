name: CI WorkFlows Actions

run-name: CI/CD ðŸš€

env:
  ENV_FILE: ${{
    github.event.pull_request.base.ref == 'master' ||
    github.ref == 'refs/heads/master' &&
    'docker-compose.production.yml' ||
    'docker-compose.local.yml'

    }}
  INTO_PULL_REQUEST_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  INTO_PUSH_BRANCH_NAME: ${{ github.ref }}
  EVENT_NAME: ${{ github.event_name }}
  PULL_REQUEST_EVENT_NAME: 'pull_request'
  PUSH_EVENT_NAME: 'push'

on:
  push:
    branches:
      - master
      - development

  pull_request:
    branches:
      - master
      - development

jobs:

  build :
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js with yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Create env file
        run: touch .env
#     create end file variable
      - name: Copy env file
        run: cp .env.local .env

      - name: Build container
        shell: sh
        run: make build-container

  deploy-productiom:
    runs-on: ubuntu-latest

    needs: [build]

    # master
#    if: github.ref == 'refs/heads/development' && github.event_name == 'push'

    steps:
#      watch envs and create ENV_FILE variable
#      next make job lint and watch action in MR
      - name: Envs
        shell: sh
        run: |
          echo "ENV_FILE"


# build
#      - name: Build production
#        shell: sh
#        run: make docker-run-install-build
#
#      - name: Setup Pages
#        uses: actions/configure-pages@v3
#
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v2
#        with:
#          path: './docs'
#
#      - name: Deploy to GitHub Pages
#        uses: actions/deploy-pages@v4
#        id: deployment
#
#      - name: Kill container
#        shell: sh
#        run: make compose-down-v


#  lint-development:
#    runs-on: ubuntu-latest
#
#    needs: [build]
#
#    if: github.event.pull_request.base.ref == 'development' && github.event_name == 'pull_request'
#
#    steps:
#      - name: Run lint in container
#        shell: sh
#        run: make docker-run-install-lint
#
#      - name: Kill container
#        shell: sh
#        run: make compose-down-v
#
#  deploy-development:
#    runs-on: ubuntu-latest
#
#    needs: [build]
#
#    if: github.ref == 'refs/heads/development' && github.event_name == 'push'
#
#    steps:
#      - name: Kill container
#        shell: sh
#        run: make compose-down-v
#
#  lint-production:
#    runs-on: ubuntu-latest
#
#    needs: [build]
#
#    if: github.event.pull_request.base.ref == 'production' && github.event_name == 'pull_request'
#
#    steps:
#      - name: Run lint in container
#        shell: sh
#        run: make docker-run-install-lint
#
#      - name: Kill container
#        shell: sh
#        run: make compose-down-v
